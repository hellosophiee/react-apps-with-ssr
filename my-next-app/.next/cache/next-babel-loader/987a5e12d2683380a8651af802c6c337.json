{"ast":null,"code":"/* import { graphql, buildSchema } from 'graphql';\n\nconst schema = buildSchema(`\n  type Query {\n    name: String,\n    address: String,\n    contact: String,\n    bloodgroup: String,\n    favouriteSnack: String,\n    vehicle: String\n  }\n`); */\nconst data = {\n  name: 'John Doe',\n  address: '7th Avenue, Brooklyn',\n  contact: '099251456',\n  bloodgroup: 'A +ve',\n  favouriteSnack: 'Hotdog',\n  vehicle: 'Hyundai Tucson'\n};\nexport default ((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'application/json');\n  res.end(JSON.stringify(data));\n});\n/* export default async (req, res) => {\n    const response = await graphql(schema, req.body.query, data);\n    res.end(JSON.stringify(response.data));\n}; */","map":{"version":3,"sources":["/Users/sophie/Desktop/dev/reactjs/building-react-apps-with-server-side-rendering/my-next-app/pages/api/TestAPI.js"],"names":["data","name","address","contact","bloodgroup","favouriteSnack","vehicle","req","res","statusCode","setHeader","end","JSON","stringify"],"mappings":"AAAA;;;;;;;;;;;;AAaA,MAAMA,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAE,UADG;AAETC,EAAAA,OAAO,EAAE,sBAFA;AAGTC,EAAAA,OAAO,EAAE,WAHA;AAITC,EAAAA,UAAU,EAAE,OAJH;AAKTC,EAAAA,cAAc,EAAE,QALP;AAMTC,EAAAA,OAAO,EAAE;AANA,CAAb;AASA,gBAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBA,EAAAA,GAAG,CAACC,UAAJ,GAAiB,GAAjB;AACAD,EAAAA,GAAG,CAACE,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAF,EAAAA,GAAG,CAACG,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAR;AACH,CAJD;AAMA","sourcesContent":["/* import { graphql, buildSchema } from 'graphql';\n\nconst schema = buildSchema(`\n  type Query {\n    name: String,\n    address: String,\n    contact: String,\n    bloodgroup: String,\n    favouriteSnack: String,\n    vehicle: String\n  }\n`); */\n\nconst data = {\n    name: 'John Doe',\n    address: '7th Avenue, Brooklyn',\n    contact: '099251456',\n    bloodgroup: 'A +ve',\n    favouriteSnack: 'Hotdog',\n    vehicle: 'Hyundai Tucson',\n};\n\nexport default (req, res) => {\n    res.statusCode = 200;\n    res.setHeader('Content-Type', 'application/json');\n    res.end(JSON.stringify(data));\n};\n\n/* export default async (req, res) => {\n    const response = await graphql(schema, req.body.query, data);\n    res.end(JSON.stringify(response.data));\n}; */\n"]},"metadata":{},"sourceType":"module"}