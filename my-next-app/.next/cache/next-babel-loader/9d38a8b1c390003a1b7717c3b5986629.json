{"ast":null,"code":"var _jsxFileName = \"/Users/sophie/Desktop/dev/reactjs/building-react-apps-with-server-side-rendering/my-next-app/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport '../style.css';\nexport default class extends React.Component {\n  static async getInitialProps() {\n    try {\n      const res = await axios.get('http://localhost:3000/api/TestAPI');\n      return {\n        data: res.data,\n        error: null\n      };\n    } catch (e) {\n      return {\n        data: '',\n        error: e\n      };\n    }\n  }\n\n  static getAPIURL() {\n    if (false) {\n      return process.env.URL_TestAPI_Prod;\n    } else {\n      return process.env.URL_TestAPI_Dev;\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"Hello from \", \"development\", \" server\"), __jsx(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, Object.keys(this.props.data).map((key, index) => __jsx(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, key, \":\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, this.props.data[key])))));\n  }\n\n}","map":{"version":3,"sources":["/Users/sophie/Desktop/dev/reactjs/building-react-apps-with-server-side-rendering/my-next-app/pages/index.js"],"names":["React","axios","Component","getInitialProps","res","get","data","error","e","getAPIURL","process","env","URL_TestAPI_Prod","URL_TestAPI_Dev","render","Object","keys","props","map","key","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AAEA,eAAe,cAAcD,KAAK,CAACE,SAApB,CAA8B;AACzC,eAAaC,eAAb,GAA+B;AAC3B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,mCAAV,CAAlB;AACA,aAAO;AAAEC,QAAAA,IAAI,EAAEF,GAAG,CAACE,IAAZ;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAAP;AACH,KAHD,CAGE,OAAOC,CAAP,EAAU;AACR,aAAO;AAAEF,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,KAAK,EAAEC;AAAnB,OAAP;AACH;AACJ;;AAED,SAAOC,SAAP,GAAmB;AACf,eAA2C;AACvC,aAAOC,OAAO,CAACC,GAAR,CAAYC,gBAAnB;AACH,KAFD,MAEO;AACH,aAAOF,OAAO,CAACC,GAAR,CAAYE,eAAnB;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWX,IAAvB,EAA6BY,GAA7B,CAAiC,CAACC,GAAD,EAAMC,KAAN,KAC9B;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,GAAL,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWX,IAAX,CAAgBa,GAAhB,CAAL,CAFJ,CADH,CADL,CAFJ,CADJ;AAaH;;AAhCwC","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport '../style.css';\n\nexport default class extends React.Component {\n    static async getInitialProps() {\n        try {\n            const res = await axios.get('http://localhost:3000/api/TestAPI');\n            return { data: res.data, error: null };\n        } catch (e) {\n            return { data: '', error: e };\n        }\n    }\n\n    static getAPIURL() {\n        if (process.env.NODE_ENV === 'production') {\n            return process.env.URL_TestAPI_Prod;\n        } else {\n            return process.env.URL_TestAPI_Dev;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Hello from {process.env.NODE_ENV} server</h1>\n                <table>\n                    {Object.keys(this.props.data).map((key, index) => (\n                        <tr key={index}>\n                            <td>{key}:</td>\n                            <td>{this.props.data[key]}</td>\n                        </tr>\n                    ))}\n                </table>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}