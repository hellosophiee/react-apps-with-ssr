{"ast":null,"code":"var _jsxFileName = \"/Users/sophie/Desktop/dev/reactjs/building-react-apps-with-server-side-rendering/my-next-app/pages/GithubUsers.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport axios from 'axios';\nimport '../style.css';\nexport default class extends React.Component {\n  static async getInitialProps() {\n    try {\n      const res = await axios.get('https://api.github.com/users');\n      return {\n        data: res.data\n      };\n    } catch (e) {\n      return {\n        error: e\n      };\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"GetUser\", async () => {\n      try {\n        const res = await axios.get('https://api.github.com/users/' + document.getElementById('inputTextbox').value);\n        this.setState({\n          data: [res.data],\n          error: null\n        });\n      } catch (e) {\n        this.setState({\n          data: null,\n          error: e\n        });\n      }\n    });\n\n    this.state = {\n      data: props.data,\n      error: props.error\n    };\n  }\n\n  render() {\n    if (this.state.error) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, \"Github Users\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, __jsx(\"input\", {\n        id: \"inputTextbox\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }), __jsx(\"button\", {\n        type: \"button\",\n        onClick: this.GetUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, \"GetUser\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }), __jsx(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, \"Error: \", this.state.error.message));\n    } else {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, \"Github Users\"), \" \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 43\n        }\n      }), __jsx(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, __jsx(\"input\", {\n        id: \"inputTextbox\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }), __jsx(\"button\", {\n        type: \"button\",\n        onClick: this.GetUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, \"Get User\")), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }), this.state.data.map((item, index) => __jsx(\"div\", {\n        key: index,\n        className: \"UserBlock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, __jsx(\"img\", {\n        src: item.avatar_url,\n        alt: \"User Icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        className: \"UserDetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, \"Username: \", item.login), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, \"ID: \", item.id)))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/sophie/Desktop/dev/reactjs/building-react-apps-with-server-side-rendering/my-next-app/pages/GithubUsers.js"],"names":["React","axios","Component","getInitialProps","res","get","data","e","error","constructor","props","document","getElementById","value","setState","state","render","GetUser","message","map","item","index","avatar_url","login","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport '../style.css';\n\nexport default class extends React.Component {\n    static async getInitialProps() {\n        try {\n            const res = await axios.get('https://api.github.com/users');\n            return { data: res.data };\n        } catch (e) {\n            return { error: e };\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = { data: props.data, error: props.error };\n    }\n\n    GetUser = async () => {\n        try {\n            const res = await axios.get(\n                'https://api.github.com/users/' +\n                    document.getElementById('inputTextbox').value\n            );\n            this.setState({\n                data: [res.data],\n                error: null,\n            });\n        } catch (e) {\n            this.setState({\n                data: null,\n                error: e,\n            });\n        }\n    };\n\n    render() {\n        if (this.state.error) {\n            return (\n                <div>\n                    <h1>Github Users</h1>\n                    <br />\n                    <div className='center'>\n                        <input id='inputTextbox' type='text'></input>\n                        <button type='button' onClick={this.GetUser}>\n                            GetUser\n                        </button>\n                    </div>\n                    <br />\n                    <p className='error'>Error: {this.state.error.message}</p>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <h1>Github Users</h1> <br />\n                    <div className='center'>\n                        <input id='inputTextbox' type='text'></input>\n                        <button type='button' onClick={this.GetUser}>\n                            Get User\n                        </button>\n                    </div>\n                    <br />\n                    {this.state.data.map((item, index) => (\n                        <div key={index} className='UserBlock'>\n                            <img src={item.avatar_url} alt='User Icon'></img>\n                            <div className='UserDetails'>\n                                <p>Username: {item.login}</p>\n                                <p>ID: {item.id}</p>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            );\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}